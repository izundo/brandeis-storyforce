@page "/"
@using System.Security.Cryptography.X509Certificates
@using System.Text.Encodings.Web
@using Google.Apis.Auth.OAuth2
@using Google.Apis.Services
@using System.Dynamic
@using Blazored.LocalStorage
@using StoryForce.Shared.Models
@using StoryForce.Shared.ViewModels
@inject HttpClient Http
@inject IJSRuntime JS

<div class="row">
    <h5 class="breadcrumbs-title">
        Please use the form below to submit your files
    </h5>
</div>
<div class="row">
    <EditForm Model="Submission" class="col s12" OnValidSubmit="@HandleSubmission">
        <ObjectGraphDataAnnotationsValidator />
        <ValidationSummary />

        <div class="col s12 m12 l12">
            <div class="card card-default scrollspy">
                <div class="card-content">
                    <h4 class="card-title">
                        Submitter Information
                    </h4>
                    <div class="row">
                        <div class="input-field col s12 m6">
                            <InputText class="validate" @bind-Value="Submission.SubmittedBy.Name" placeholder="Full Name" />
                            <ValidationMessage For="@(() => Submission.SubmittedBy.Name)" />
                        </div>
                        <div class="input-field col s12 m6">
                            <InputText type="email" class="validate" @bind-Value="Submission.SubmittedBy.Email" placeholder="Email" />
                            <ValidationMessage For="@(() => Submission.SubmittedBy.Email)" />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col s12 m12 l12">
            <div class="card card-default scrollspy">
                <div class="card-content">
                    <h4 class="card-title">
                        Upload files from your device
                    </h4>
                    <div class="row">
                        <div class="col s12 m4 l4">
                            <div class="file-field input-field">
                                <div class="btn">
                                    <span>From Device</span>
                                    <InputFile multiple class="form-control-file" id="uploadFiles" OnChange="@OnFileInputChange" />
                                </div>

                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text">
                                </div>
                            </div>
                        </div>
                        <div class="col s12 m4 l4">
                            <div class="file-field input-field">
                                <div class="btn" id="addGDriveFiles" @onclick="InitGooglePicker">
                                    <span>From Google Drive</span>
                                    <input type="hidden" @bind-value="Submission.GDriveOAuthToken" id="Submission_GDriveOAuthToken" />
                                </div>
                            </div>
                        </div>
                        <div class="col s12 m4 l4">
                            <div class="file-field input-field">
                                <div class="btn" id="uploadByUrl" @onclick="@AddUrl">
                                    <span>From URL</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="col s12 m12 l12" id="previewFiles">
            @foreach (var (file, index) in Submission.UploadFiles.Select((file, index) => (file, index)))
            {
                <div class="col s12 m6 l4">
                    <div class="card">
                        <div class="card-image">
                            <a class="btn-floating mb-1 waves-effect waves-light remove-file" @onclick="@(() => RemoveFile(file))">
                                <i class="material-icons">clear</i>
                            </a>
                            @if (!string.IsNullOrEmpty(file.PreviewUrl))
                            {
                                <img src="@file.PreviewUrl" class="img-preview">
                            }
                        </div>
                        <div class="card-content" data-children-count="1">
                            <span class="card-title font-weight-400">@file.Title</span>
                            @if (file.StorageProvider == StorageProvider.Url)
                            {
                                <InputText @bind-Value="file.DownloadUrl" class="validate" placeholder="Enter Url" />
                            }
                            <InputText @bind-Value="file.Description" class="validate" placeholder="Description" />
                            
                            @{
                                var pi = 0;

                                foreach (var person in file.FeaturedPeople)
                                {
                                    <div class="row featured-person">
                                        <div class="input-field col s12 m6">
                                            <InputText class="validate" @bind-Value="person.Name" placeholder="Name" />
                                            <ValidationMessage For="@(() => person.Name)" />
                                        </div>
                                        <div class="input-field col s11 m5">
                                            <InputNumber class="validate" @bind-Value="person.ClassOfYear" placeholder="Year" />
                                        </div>
                                        <div class="input-field col s1 m1 p-0">
                                            <a class="btn-flat waves-effect add-person blue-text text-darken-3 p-0" @onclick="@(() => RemoveFeaturedPerson(file, person))"><i class="material-icons dp48">remove_circle_outline</i></a>
                                        </div>
                                    </div>

                                    pi++;
                                }
                                
                            }
                            <div class="row">
                                <a class="btn-flat waves-effect add-person blue-text text-darken-3 p-0" @onclick="@(() => AddFeaturedPerson(file))"><i class="material-icons dp48">add_circle_outline</i>Add Person</a>
                            </div>
                            <div class="row">
                                <div class="input-field col s12 m6">
                                    <InputText class="validate" @bind-Value="file.Event.Name" placeholder="Event Name" />
                                </div>
                                <div class="input-field col s12 m6">
                                    <InputNumber class="validate" @bind-Value="file.Event.Year" placeholder="Event Year" />
                                    <ValidationMessage For="@(() => file.Event.Year)" />
                                </div>
                            </div>
                            @if (index == 0)
                            {
                                <div class="row">
                                    <a class="btn-flat waves-effect blue-text text-darken-3 duplicate-data p-0" @onclick="@(() => DuplicateFileAttributes(file))">Duplicate Data</a> 
                                    <br/><i>You can make changes to individual files</i>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="row">
            <div class="input-field col s6">
                <button class="btn cyan waves-effect waves-light left" onClick="window.location.reload();">
                    Reset
                </button>
            </div>
            <div class="input-field col s6">
                <button class="btn cyan waves-effect waves-light right" type="submit" id="submit-button">
                    Submit <i class="material-icons right">send</i>
                </button>
            </div>
        </div>
    </EditForm>

    <!-- Modal -->

    <div id="modal1" class="modal @modalClass" style="display:@modalDisplay">
        <div class="modal-content">
            <h4>Upload Progress</h4>
            <div class="progress @modalProgressClass">
                <div class="indeterminate"></div>
            </div>
            <div class="success-message @successClass">Your files were uploaded successfully!</div>
            <div class="@errorMessageClass">@submissionFailedMessage</div>
        </div>
        <div class="modal-footer @modalFooterClass">
            <a class="modal-action modal-close waves-effect waves-green btn-flat" @onclick="@CloseModalWindow">Close</a>
        </div>
    </div>


    @if (showBackdrop)
    {
        <div class="modal-backdrop fade show"></div>
    }
</div>